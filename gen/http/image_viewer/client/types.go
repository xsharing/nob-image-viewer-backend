// Code generated by goa v3.5.4, DO NOT EDIT.
//
// image-viewer HTTP client types
//
// Command:
// $ goa gen github.com/image-viewer/nob-image-viewer-backend/design

package client

import (
	imageviewer "github.com/image-viewer/nob-image-viewer-backend/gen/image_viewer"
)

// ImagesResponseBody is the type of the "image-viewer" service "images"
// endpoint HTTP response body.
type ImagesResponseBody []*ImageResponse

// ImageResponse is used to define fields on response body types.
type ImageResponse struct {
	// name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// signed thumbnail image url
	ThumbnailURL *string `form:"thumbnail_url,omitempty" json:"thumbnail_url,omitempty" xml:"thumbnail_url,omitempty"`
	// signed original image url
	OriginalURL *string `form:"original_url,omitempty" json:"original_url,omitempty" xml:"original_url,omitempty"`
}

// NewImagesImageOK builds a "image-viewer" service "images" endpoint result
// from a HTTP "OK" response.
func NewImagesImageOK(body []*ImageResponse) []*imageviewer.Image {
	v := make([]*imageviewer.Image, len(body))
	for i, val := range body {
		v[i] = unmarshalImageResponseToImageviewerImage(val)
	}

	return v
}
