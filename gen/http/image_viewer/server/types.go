// Code generated by goa v3.5.4, DO NOT EDIT.
//
// image-viewer HTTP server types
//
// Command:
// $ goa gen github.com/image-viewer/nob-image-viewer-backend/design

package server

import (
	imageviewer "github.com/image-viewer/nob-image-viewer-backend/gen/image_viewer"
)

// ImagesResponseBody is the type of the "image-viewer" service "images"
// endpoint HTTP response body.
type ImagesResponseBody []*ImageResponse

// ImageResponse is used to define fields on response body types.
type ImageResponse struct {
	// name
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	// signed thumbnail image url
	ThumbnailURL *string `form:"thumbnail_url,omitempty" json:"thumbnail_url,omitempty" xml:"thumbnail_url,omitempty"`
	// signed original image url
	OriginalURL *string `form:"original_url,omitempty" json:"original_url,omitempty" xml:"original_url,omitempty"`
}

// NewImagesResponseBody builds the HTTP response body from the result of the
// "images" endpoint of the "image-viewer" service.
func NewImagesResponseBody(res []*imageviewer.Image) ImagesResponseBody {
	body := make([]*ImageResponse, len(res))
	for i, val := range res {
		body[i] = marshalImageviewerImageToImageResponse(val)
	}
	return body
}

// NewImagesPayload builds a image-viewer service images endpoint payload.
func NewImagesPayload(folder *string) *imageviewer.ImagesPayload {
	v := &imageviewer.ImagesPayload{}
	v.Folder = folder

	return v
}
