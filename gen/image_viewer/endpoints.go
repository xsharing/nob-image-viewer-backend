// Code generated by goa v3.5.4, DO NOT EDIT.
//
// image-viewer endpoints
//
// Command:
// $ goa gen github.com/image-viewer/nob-image-viewer-backend/design

package imageviewer

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "image-viewer" service endpoints.
type Endpoints struct {
	Folders goa.Endpoint
	Images  goa.Endpoint
}

// NewEndpoints wraps the methods of the "image-viewer" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Folders: NewFoldersEndpoint(s),
		Images:  NewImagesEndpoint(s),
	}
}

// Use applies the given middleware to all the "image-viewer" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Folders = m(e.Folders)
	e.Images = m(e.Images)
}

// NewFoldersEndpoint returns an endpoint function that calls the method
// "folders" of service "image-viewer".
func NewFoldersEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		return s.Folders(ctx)
	}
}

// NewImagesEndpoint returns an endpoint function that calls the method
// "images" of service "image-viewer".
func NewImagesEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*ImagesPayload)
		return s.Images(ctx, p)
	}
}
