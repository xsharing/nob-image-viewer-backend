# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: nob-image-viewer-backend
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

custom:
  serverless-offline:
    noPrependStageInUrl: true
    useDocker: true

provider:
  name: aws
  runtime: go1.x
  lambdaHashingVersion: 20201221
  apiGateway:
    binaryMediaTypes:
      - 'image/png'
      - ‘image/jpeg’
  httpApi:
    payload: '2.0'
  environment:
    STAGE: ${opt:stage, 'dev'}
    IMAGE_BUCKET: !ImportValue "ImageBucket-${opt:stage, 'dev'}"
    FOLDER_STRUCTURE_BUCKET: !ImportValue "FolderStructureBucket-${opt:stage, 'dev'}"
    THUMBNAIL_BUCKET: !ImportValue "ThumbnailBucket-${opt:stage, 'dev'}"
  iamRoleStatements:
    - Effect: "Allow"
      Action:
       - "s3:ListAllMyBuckets"
      Resource: '*'
    - Effect: "Allow"
      Action:
       - "s3:ListBucket"
       - "s3:GetBucketLocation"
      Resource:
        - {Fn::Sub: ['arn:aws:s3:::${BucketArn}', { BucketArn: !ImportValue "ImageBucket-${opt:stage, 'dev'}" }]}
        - {Fn::Sub: ['arn:aws:s3:::${BucketArn}', { BucketArn: !ImportValue "FolderStructureBucket-${opt:stage, 'dev'}" }]}
        - {Fn::Sub: ['arn:aws:s3:::${BucketArn}', { BucketArn: !ImportValue "ThumbnailBucket-${opt:stage, 'dev'}" }]}
    - Effect: "Allow"
      Action:
       - "s3:GetObject"
       - "s3:GetObjectAcl"
       - "s3:PutObject"
       - "s3:PutObjectAcl"
       - "s3:DeleteObject"
      Resource:
        - {Fn::Sub: ['arn:aws:s3:::${BucketArn}/*', { BucketArn: !ImportValue "ImageBucket-${opt:stage, 'dev'}" }]}
        - {Fn::Sub: ['arn:aws:s3:::${BucketArn}/*', { BucketArn: !ImportValue "FolderStructureBucket-${opt:stage, 'dev'}" }]}
        - {Fn::Sub: ['arn:aws:s3:::${BucketArn}/*', { BucketArn: !ImportValue "ThumbnailBucket-${opt:stage, 'dev'}" }]}

plugins:
  - serverless-offline

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  api:
    handler: bin/api
    events:
      - httpApi:
          path: /folders
          method: GET
      - httpApi:
          path: /images
          method: GET
  s3_handler:
    handler: bin/s3_handler
    events:
      - s3:
          bucket: !ImportValue ImageBucket-${opt:stage, 'dev'}
          event: s3:ObjectCreated:*
          existing: true
